5,"Level/XP");
-		$RETURN;
-	};
\(END)

\(BEGIN)
name = baseclassWitch
[IsBaseclassAllowed] = $VAR par5;
-par5 = $GET_HOOK_PARAM(5);
-$IF (par5 != "F"){$RETURN "N";};
\(END)

\(BEGIN)
name = baseclassWizard
[IsBaseclassAllowed] = $VAR par5;
-par5 = $GET_HOOK_PARAM(5);
-$IF (par5 != "M"){$RETURN "N";};
\(END)

\(BEGIN)
name = casterLevel
[SpellCasterLevel] = $VAR atk; // attacker
-$VAR nom;
-$VAR list;
-$VAR cls; // class of spell caster
-$VAR adj; // level modifier
-$VAR lvl; // level
-atk = $IndexOf($AttackerContext());
-nom = $GET_CHAR_NAME(atk);
-list = $SA_PARAM_GET();
-cls = $DelimitedStringSubstring(list,0);
-adj = $DelimitedStringSubstring(list,1);
-lvl = $GET_CHAR_Lvl(atk,cls) -# adj;
-$IF (cls == "monster"){$RETURN $GET_MONSTERTYPE_SA(nom,"monsterLevel");};
-$IF (cls == "item"){$RETURN adj;}
-$ELSE {$RETURN lvl;};
\(END)

\(BEGIN)
name = class_Assassin
\(END)

\(BEGIN)
name = class_baseName
[PostCreateChara